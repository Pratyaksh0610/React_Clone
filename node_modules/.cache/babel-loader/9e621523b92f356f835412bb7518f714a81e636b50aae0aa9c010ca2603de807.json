{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\netflix-clone-main\\\\src\\\\Collecton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./row.css\";\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nlet opts = {\n  height: \"390px\",\n  width: \"100%\",\n  playerVars: {\n    autoplay: 1\n  }\n};\nfunction Collection(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  // console.log(fetchUrl);\n  let [movies, SetMovies] = useState([]);\n  let [trailerUrl, setTrailerUrl] = useState(\"\");\n  const handleClick = movie => {\n    // const url = movie.original_title;\n    // const urlParams = new URLSearchParams(new URL(url).search);\n    if (trailerUrl) {\n      setTrailerUrl();\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.original_title) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        console.log(urlParams.get('v'));\n        // console.log(movie?.original_title);\n        setTrailerUrl(urlParams.get('v'));\n        // console.log(new URL(url).search); \n      }).catch(error => console.log(error));\n      // console.log(movie);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      let request = await axios.get(fetchUrl);\n      // console.log(request.data.parts);\n      SetMovies(request.data.parts);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map((movie, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          //    className={`row__poster ${isLargeRow&&\"row__posterLarge\"}`}\n          className: `row__poster collection`,\n          onClick: () => handleClick(movie)\n          // src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name} key={movie.id} id={index} />\n          ,\n          src: `${base_url}${movie.poster_path}`,\n          alt: movie.name,\n          id: index\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Collection, \"lIjX0bcrauOAfmUCwlevE6wT7cU=\");\n_c = Collection;\nexport default Collection;\nvar _c;\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","movieTrailer","jsxDEV","_jsxDEV","base_url","opts","height","width","playerVars","autoplay","Collection","_ref","_s","title","fetchUrl","isLargeRow","movies","SetMovies","trailerUrl","setTrailerUrl","handleClick","movie","original_title","then","url","urlParams","URLSearchParams","URL","search","console","log","get","catch","error","fetchData","request","data","parts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","poster_path","alt","name","id","videoId","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/netflix-clone-main/src/Collecton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport \"./row.css\"\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\nlet opts = {\n    height: \"390px\",\n    width: \"100%\",\n    playerVars: {\n        autoplay: 1,\n    },\n};\n\nfunction Collection({ title, fetchUrl, isLargeRow }) {\n    // console.log(fetchUrl);\n    let [movies, SetMovies] = useState([]);\n    let [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    const handleClick = (movie) => {\n        // const url = movie.original_title;\n        // const urlParams = new URLSearchParams(new URL(url).search);\n        if (trailerUrl) {\n            setTrailerUrl();\n        }\n        else {\n            movieTrailer(movie?.original_title || \"\")\n                .then((url) => {\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    console.log(urlParams.get('v'))\n                    // console.log(movie?.original_title);\n                    setTrailerUrl(urlParams.get('v'));\n                    // console.log(new URL(url).search); \n                })\n                .catch((error) => console.log(error))\n            // console.log(movie);\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            let request = await axios.get(fetchUrl);\n            // console.log(request.data.parts);\n            SetMovies(request.data.parts);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    return (\n        <div className='row'>\n            {/* title */}\n            <h2>{title}</h2>\n\n            {/* container->posters */}\n            <div className='row__posters'>\n                {/* several row_posters */}\n                {movies.map((movie, index) => {\n                    return <img\n                        //    className={`row__poster ${isLargeRow&&\"row__posterLarge\"}`}\n                        className={`row__poster collection`}\n                        onClick={()=>handleClick(movie)}\n                        // src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name} key={movie.id} id={index} />\n                        src={`${base_url}${movie.poster_path}`} alt={movie.name} key={movie.id} id={index} />\n                })}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Collection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}